
ARG GB_BASE_IMAGE=ghcr.io/gobletqa/goblet-base:develop

# ---- Prune App Stage ---- #
FROM $GB_BASE_IMAGE as goblet-pruner
WORKDIR /app
RUN yarn global add turbo
COPY . .
RUN turbo prune --docker --scope=@@gobletqa/backend
# ---- End Stage ---- #

# ---- Install Stage ---- #
FROM $GB_BASE_IMAGE as goblet-installer
WORKDIR /keg/tap
COPY --from=goblet-pruner /app/out/json/ .
COPY --from=goblet-pruner /app/out/yarn.lock ./yarn.lock
RUN yarn install --frozen-lockfile
# ---- End Stage ---- #

# ---- Build Stage ---- #
FROM $GB_BASE_IMAGE as goblet-builder
WORKDIR /keg/tap
COPY --from=goblet-pruner /app/out/full/ .
COPY --from=goblet-installer /app/ .
RUN yarn turbo run build --filter=@gobletqa/backend && \
    yarn install --frozen-lockfile --production
# ---- End Stage ---- #

# ---- Run Stage ---- #
FROM $GB_BASE_IMAGE as goblet-runner
WORKDIR /keg/tap/repos/backend
ARG DOC_APP_PATH=/keg/tap
ARG GB_BE_PORT=7005

# TODO: investigate what else needs copied over form build stage
# COPY --from=goblet-builder /keg/tap/repos/backend/dist repos
# COPY --from=goblet-builder /keg/tap/node_modules/. node_modules/.
# COPY --from=goblet-builder /keg/tap/repos/backend/package.json repos/backend/.
# COPY --from=goblet-builder /keg/tap/repos/backend/tsconfig.build.json repos/backend/tsconfig.json
# COPY --from=goblet-builder /keg/tap/repos/backend/node_modules/. repos/backend/node_modules/.

RUN ln -s /keg/tap/node_modules $HOME/.node_modules && \
    ln -s /keg/tap/node_modules /keg/node_modules
EXPOSE $GB_BE_PORT
CMD [ "yarn", "serve" ]
